// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: stock_info.proto
// Protobuf C++ Version: 5.27.0

#include "stock_info.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace SlabStock {
namespace CPyTa {
namespace protobuf {

inline constexpr TaResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : priceinfo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaResult::TaResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TaResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaResultDefaultTypeInternal() {}
  union {
    TaResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaResultDefaultTypeInternal _TaResult_default_instance_;

inline constexpr StockInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR StockInfo::StockInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StockInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StockInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StockInfoDefaultTypeInternal() {}
  union {
    StockInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StockInfoDefaultTypeInternal _StockInfo_default_instance_;
}  // namespace protobuf
}  // namespace CPyTa
}  // namespace SlabStock
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_stock_5finfo_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_stock_5finfo_2eproto = nullptr;
const ::uint32_t
    TableStruct_stock_5finfo_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::SlabStock::CPyTa::protobuf::StockInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SlabStock::CPyTa::protobuf::StockInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SlabStock::CPyTa::protobuf::StockInfo, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::SlabStock::CPyTa::protobuf::StockInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::SlabStock::CPyTa::protobuf::StockInfo, _impl_.exchange_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SlabStock::CPyTa::protobuf::TaResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SlabStock::CPyTa::protobuf::TaResult, _impl_.priceinfo_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::SlabStock::CPyTa::protobuf::StockInfo)},
        {14, -1, -1, sizeof(::SlabStock::CPyTa::protobuf::TaResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::SlabStock::CPyTa::protobuf::_StockInfo_default_instance_._instance,
    &::SlabStock::CPyTa::protobuf::_TaResult_default_instance_._instance,
};
const char descriptor_table_protodef_stock_5finfo_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020stock_info.proto\022\030SlabStock.CPyTa.prot"
    "obuf\"i\n\tStockInfo\022\016\n\006symbol\030\001 \001(\t\022\014\n\004nam"
    "e\030\002 \001(\t\022\025\n\010exchange\030\003 \001(\tH\000\210\001\001B\013\n\t_excha"
    "ngeJ\004\010\004\020\005J\004\010\005\020\006R\016old_field_name\"\035\n\010TaRes"
    "ult\022\021\n\tpriceInfo\030\001 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_stock_5finfo_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_stock_5finfo_2eproto = {
    false,
    false,
    190,
    descriptor_table_protodef_stock_5finfo_2eproto,
    "stock_info.proto",
    &descriptor_table_stock_5finfo_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_stock_5finfo_2eproto::offsets,
    file_level_enum_descriptors_stock_5finfo_2eproto,
    file_level_service_descriptors_stock_5finfo_2eproto,
};
namespace SlabStock {
namespace CPyTa {
namespace protobuf {
// ===================================================================

class StockInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StockInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StockInfo, _impl_._has_bits_);
};

StockInfo::StockInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SlabStock.CPyTa.protobuf.StockInfo)
}
inline PROTOBUF_NDEBUG_INLINE StockInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SlabStock::CPyTa::protobuf::StockInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        symbol_(arena, from.symbol_),
        name_(arena, from.name_),
        exchange_(arena, from.exchange_) {}

StockInfo::StockInfo(
    ::google::protobuf::Arena* arena,
    const StockInfo& from)
    : ::google::protobuf::Message(arena) {
  StockInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SlabStock.CPyTa.protobuf.StockInfo)
}
inline PROTOBUF_NDEBUG_INLINE StockInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        symbol_(arena),
        name_(arena),
        exchange_(arena) {}

inline void StockInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StockInfo::~StockInfo() {
  // @@protoc_insertion_point(destructor:SlabStock.CPyTa.protobuf.StockInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StockInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.name_.Destroy();
  _impl_.exchange_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StockInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StockInfo, _impl_._cached_size_),
              false,
          },
          &StockInfo::MergeImpl,
          &StockInfo::kDescriptorMethods,
          &descriptor_table_stock_5finfo_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 61, 2> StockInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StockInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StockInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SlabStock::CPyTa::protobuf::StockInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StockInfo, _impl_.symbol_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StockInfo, _impl_.name_)}},
    // optional string exchange = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(StockInfo, _impl_.exchange_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(StockInfo, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(StockInfo, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string exchange = 3;
    {PROTOBUF_FIELD_OFFSET(StockInfo, _impl_.exchange_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\6\4\10\0\0\0\0"
    "SlabStock.CPyTa.protobuf.StockInfo"
    "symbol"
    "name"
    "exchange"
  }},
};

PROTOBUF_NOINLINE void StockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SlabStock.CPyTa.protobuf.StockInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.exchange_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StockInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SlabStock.CPyTa.protobuf.StockInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1;
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SlabStock.CPyTa.protobuf.StockInfo.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SlabStock.CPyTa.protobuf.StockInfo.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string exchange = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_exchange();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SlabStock.CPyTa.protobuf.StockInfo.exchange");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SlabStock.CPyTa.protobuf.StockInfo)
  return target;
}

::size_t StockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SlabStock.CPyTa.protobuf.StockInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string symbol = 1;
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // optional string exchange = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_exchange());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StockInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StockInfo*>(&to_msg);
  auto& from = static_cast<const StockInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SlabStock.CPyTa.protobuf.StockInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_exchange(from._internal_exchange());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StockInfo::CopyFrom(const StockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SlabStock.CPyTa.protobuf.StockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StockInfo::InternalSwap(StockInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
}

::google::protobuf::Metadata StockInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaResult::_Internal {
 public:
};

TaResult::TaResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SlabStock.CPyTa.protobuf.TaResult)
}
inline PROTOBUF_NDEBUG_INLINE TaResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SlabStock::CPyTa::protobuf::TaResult& from_msg)
      : priceinfo_(arena, from.priceinfo_),
        _cached_size_{0} {}

TaResult::TaResult(
    ::google::protobuf::Arena* arena,
    const TaResult& from)
    : ::google::protobuf::Message(arena) {
  TaResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SlabStock.CPyTa.protobuf.TaResult)
}
inline PROTOBUF_NDEBUG_INLINE TaResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : priceinfo_(arena),
        _cached_size_{0} {}

inline void TaResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TaResult::~TaResult() {
  // @@protoc_insertion_point(destructor:SlabStock.CPyTa.protobuf.TaResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.priceinfo_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TaResult::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TaResult, _impl_._cached_size_),
              false,
          },
          &TaResult::MergeImpl,
          &TaResult::kDescriptorMethods,
          &descriptor_table_stock_5finfo_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> TaResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TaResult_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SlabStock::CPyTa::protobuf::TaResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string priceInfo = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaResult, _impl_.priceinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string priceInfo = 1;
    {PROTOBUF_FIELD_OFFSET(TaResult, _impl_.priceinfo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\11\0\0\0\0\0\0"
    "SlabStock.CPyTa.protobuf.TaResult"
    "priceInfo"
  }},
};

PROTOBUF_NOINLINE void TaResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SlabStock.CPyTa.protobuf.TaResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.priceinfo_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TaResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SlabStock.CPyTa.protobuf.TaResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string priceInfo = 1;
  if (!this->_internal_priceinfo().empty()) {
    const std::string& _s = this->_internal_priceinfo();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SlabStock.CPyTa.protobuf.TaResult.priceInfo");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SlabStock.CPyTa.protobuf.TaResult)
  return target;
}

::size_t TaResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SlabStock.CPyTa.protobuf.TaResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string priceInfo = 1;
  if (!this->_internal_priceinfo().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_priceinfo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TaResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaResult*>(&to_msg);
  auto& from = static_cast<const TaResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SlabStock.CPyTa.protobuf.TaResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_priceinfo().empty()) {
    _this->_internal_set_priceinfo(from._internal_priceinfo());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaResult::CopyFrom(const TaResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SlabStock.CPyTa.protobuf.TaResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaResult::InternalSwap(TaResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.priceinfo_, &other->_impl_.priceinfo_, arena);
}

::google::protobuf::Metadata TaResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace CPyTa
}  // namespace SlabStock
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_stock_5finfo_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
