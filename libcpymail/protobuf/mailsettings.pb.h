// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mailsettings.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_mailsettings_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_mailsettings_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mailsettings_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mailsettings_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mailsettings_2eproto;
namespace cpymail {
namespace protobuf {
class Attachment;
struct AttachmentDefaultTypeInternal;
extern AttachmentDefaultTypeInternal _Attachment_default_instance_;
class MailSettings;
struct MailSettingsDefaultTypeInternal;
extern MailSettingsDefaultTypeInternal _MailSettings_default_instance_;
class RequestResult;
struct RequestResultDefaultTypeInternal;
extern RequestResultDefaultTypeInternal _RequestResult_default_instance_;
}  // namespace protobuf
}  // namespace cpymail
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cpymail {
namespace protobuf {

// ===================================================================


// -------------------------------------------------------------------

class RequestResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cpymail.protobuf.RequestResult) */ {
 public:
  inline RequestResult() : RequestResult(nullptr) {}
  ~RequestResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequestResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequestResult(const RequestResult& from) : RequestResult(nullptr, from) {}
  inline RequestResult(RequestResult&& from) noexcept
      : RequestResult(nullptr, std::move(from)) {}
  inline RequestResult& operator=(const RequestResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestResult& operator=(RequestResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestResult* internal_default_instance() {
    return reinterpret_cast<const RequestResult*>(
        &_RequestResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RequestResult& a, RequestResult& b) { a.Swap(&b); }
  inline void Swap(RequestResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequestResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RequestResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequestResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequestResult& from) { RequestResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequestResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "cpymail.protobuf.RequestResult"; }

 protected:
  explicit RequestResult(::google::protobuf::Arena* arena);
  RequestResult(::google::protobuf::Arena* arena, const RequestResult& from);
  RequestResult(::google::protobuf::Arena* arena, RequestResult&& from) noexcept
      : RequestResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusMsgFieldNumber = 2,
    kStatusCodeFieldNumber = 1,
  };
  // string status_msg = 2;
  void clear_status_msg() ;
  const std::string& status_msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status_msg(Arg_&& arg, Args_... args);
  std::string* mutable_status_msg();
  PROTOBUF_NODISCARD std::string* release_status_msg();
  void set_allocated_status_msg(std::string* value);

  private:
  const std::string& _internal_status_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status_msg(
      const std::string& value);
  std::string* _internal_mutable_status_msg();

  public:
  // int32 status_code = 1;
  void clear_status_code() ;
  ::int32_t status_code() const;
  void set_status_code(::int32_t value);

  private:
  ::int32_t _internal_status_code() const;
  void _internal_set_status_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cpymail.protobuf.RequestResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequestResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequestResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_msg_;
    ::int32_t status_code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mailsettings_2eproto;
};
// -------------------------------------------------------------------

class Attachment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cpymail.protobuf.Attachment) */ {
 public:
  inline Attachment() : Attachment(nullptr) {}
  ~Attachment() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Attachment(
      ::google::protobuf::internal::ConstantInitialized);

  inline Attachment(const Attachment& from) : Attachment(nullptr, from) {}
  inline Attachment(Attachment&& from) noexcept
      : Attachment(nullptr, std::move(from)) {}
  inline Attachment& operator=(const Attachment& from) {
    CopyFrom(from);
    return *this;
  }
  inline Attachment& operator=(Attachment&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Attachment& default_instance() {
    return *internal_default_instance();
  }
  static inline const Attachment* internal_default_instance() {
    return reinterpret_cast<const Attachment*>(
        &_Attachment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Attachment& a, Attachment& b) { a.Swap(&b); }
  inline void Swap(Attachment* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Attachment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Attachment* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Attachment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Attachment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Attachment& from) { Attachment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Attachment* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "cpymail.protobuf.Attachment"; }

 protected:
  explicit Attachment(::google::protobuf::Arena* arena);
  Attachment(::google::protobuf::Arena* arena, const Attachment& from);
  Attachment(::google::protobuf::Arena* arena, Attachment&& from) noexcept
      : Attachment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilenameFieldNumber = 1,
    kFilePathFieldNumber = 2,
  };
  // string filename = 1;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* value);

  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(
      const std::string& value);
  std::string* _internal_mutable_filename();

  public:
  // string file_path = 2;
  void clear_file_path() ;
  const std::string& file_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_path(Arg_&& arg, Args_... args);
  std::string* mutable_file_path();
  PROTOBUF_NODISCARD std::string* release_file_path();
  void set_allocated_file_path(std::string* value);

  private:
  const std::string& _internal_file_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_path(
      const std::string& value);
  std::string* _internal_mutable_file_path();

  public:
  // @@protoc_insertion_point(class_scope:cpymail.protobuf.Attachment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Attachment_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Attachment& from_msg);
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::google::protobuf::internal::ArenaStringPtr file_path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mailsettings_2eproto;
};
// -------------------------------------------------------------------

class MailSettings final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cpymail.protobuf.MailSettings) */ {
 public:
  inline MailSettings() : MailSettings(nullptr) {}
  ~MailSettings() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MailSettings(
      ::google::protobuf::internal::ConstantInitialized);

  inline MailSettings(const MailSettings& from) : MailSettings(nullptr, from) {}
  inline MailSettings(MailSettings&& from) noexcept
      : MailSettings(nullptr, std::move(from)) {}
  inline MailSettings& operator=(const MailSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline MailSettings& operator=(MailSettings&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MailSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const MailSettings* internal_default_instance() {
    return reinterpret_cast<const MailSettings*>(
        &_MailSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MailSettings& a, MailSettings& b) { a.Swap(&b); }
  inline void Swap(MailSettings* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MailSettings* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MailSettings* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MailSettings>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MailSettings& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MailSettings& from) { MailSettings::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MailSettings* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "cpymail.protobuf.MailSettings"; }

 protected:
  explicit MailSettings(::google::protobuf::Arena* arena);
  MailSettings(::google::protobuf::Arena* arena, const MailSettings& from);
  MailSettings(::google::protobuf::Arena* arena, MailSettings&& from) noexcept
      : MailSettings(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kToAddressesFieldNumber = 1,
    kCcAddressesFieldNumber = 2,
    kBccAddressesFieldNumber = 3,
    kAttachmentsFieldNumber = 6,
    kSubjectFieldNumber = 4,
    kMessageFieldNumber = 5,
  };
  // repeated string to_addresses = 1;
  int to_addresses_size() const;
  private:
  int _internal_to_addresses_size() const;

  public:
  void clear_to_addresses() ;
  const std::string& to_addresses(int index) const;
  std::string* mutable_to_addresses(int index);
  void set_to_addresses(int index, const std::string& value);
  void set_to_addresses(int index, std::string&& value);
  void set_to_addresses(int index, const char* value);
  void set_to_addresses(int index, const char* value, std::size_t size);
  void set_to_addresses(int index, absl::string_view value);
  std::string* add_to_addresses();
  void add_to_addresses(const std::string& value);
  void add_to_addresses(std::string&& value);
  void add_to_addresses(const char* value);
  void add_to_addresses(const char* value, std::size_t size);
  void add_to_addresses(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& to_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_to_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_to_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_to_addresses();

  public:
  // repeated string cc_addresses = 2;
  int cc_addresses_size() const;
  private:
  int _internal_cc_addresses_size() const;

  public:
  void clear_cc_addresses() ;
  const std::string& cc_addresses(int index) const;
  std::string* mutable_cc_addresses(int index);
  void set_cc_addresses(int index, const std::string& value);
  void set_cc_addresses(int index, std::string&& value);
  void set_cc_addresses(int index, const char* value);
  void set_cc_addresses(int index, const char* value, std::size_t size);
  void set_cc_addresses(int index, absl::string_view value);
  std::string* add_cc_addresses();
  void add_cc_addresses(const std::string& value);
  void add_cc_addresses(std::string&& value);
  void add_cc_addresses(const char* value);
  void add_cc_addresses(const char* value, std::size_t size);
  void add_cc_addresses(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cc_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cc_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cc_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cc_addresses();

  public:
  // repeated string bcc_addresses = 3;
  int bcc_addresses_size() const;
  private:
  int _internal_bcc_addresses_size() const;

  public:
  void clear_bcc_addresses() ;
  const std::string& bcc_addresses(int index) const;
  std::string* mutable_bcc_addresses(int index);
  void set_bcc_addresses(int index, const std::string& value);
  void set_bcc_addresses(int index, std::string&& value);
  void set_bcc_addresses(int index, const char* value);
  void set_bcc_addresses(int index, const char* value, std::size_t size);
  void set_bcc_addresses(int index, absl::string_view value);
  std::string* add_bcc_addresses();
  void add_bcc_addresses(const std::string& value);
  void add_bcc_addresses(std::string&& value);
  void add_bcc_addresses(const char* value);
  void add_bcc_addresses(const char* value, std::size_t size);
  void add_bcc_addresses(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& bcc_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_bcc_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_bcc_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_bcc_addresses();

  public:
  // repeated .cpymail.protobuf.Attachment attachments = 6;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;

  public:
  void clear_attachments() ;
  ::cpymail::protobuf::Attachment* mutable_attachments(int index);
  ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>* mutable_attachments();

  private:
  const ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>& _internal_attachments() const;
  ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>* _internal_mutable_attachments();
  public:
  const ::cpymail::protobuf::Attachment& attachments(int index) const;
  ::cpymail::protobuf::Attachment* add_attachments();
  const ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>& attachments() const;
  // string subject = 4;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // string message = 5;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:cpymail.protobuf.MailSettings)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      89, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MailSettings_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MailSettings& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> to_addresses_;
    ::google::protobuf::RepeatedPtrField<std::string> cc_addresses_;
    ::google::protobuf::RepeatedPtrField<std::string> bcc_addresses_;
    ::google::protobuf::RepeatedPtrField< ::cpymail::protobuf::Attachment > attachments_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mailsettings_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Attachment

// string filename = 1;
inline void Attachment::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& Attachment::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.Attachment.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Attachment::set_filename(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cpymail.protobuf.Attachment.filename)
}
inline std::string* Attachment::mutable_filename() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.Attachment.filename)
  return _s;
}
inline const std::string& Attachment::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void Attachment::_internal_set_filename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* Attachment::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* Attachment::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cpymail.protobuf.Attachment.filename)
  return _impl_.filename_.Release();
}
inline void Attachment::set_allocated_filename(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filename_.IsDefault()) {
          _impl_.filename_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cpymail.protobuf.Attachment.filename)
}

// string file_path = 2;
inline void Attachment::clear_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.ClearToEmpty();
}
inline const std::string& Attachment::file_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.Attachment.file_path)
  return _internal_file_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Attachment::set_file_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cpymail.protobuf.Attachment.file_path)
}
inline std::string* Attachment::mutable_file_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file_path();
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.Attachment.file_path)
  return _s;
}
inline const std::string& Attachment::_internal_file_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_path_.Get();
}
inline void Attachment::_internal_set_file_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.Set(value, GetArena());
}
inline std::string* Attachment::_internal_mutable_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_path_.Mutable( GetArena());
}
inline std::string* Attachment::release_file_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cpymail.protobuf.Attachment.file_path)
  return _impl_.file_path_.Release();
}
inline void Attachment::set_allocated_file_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_path_.IsDefault()) {
          _impl_.file_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cpymail.protobuf.Attachment.file_path)
}

// -------------------------------------------------------------------

// MailSettings

// repeated string to_addresses = 1;
inline int MailSettings::_internal_to_addresses_size() const {
  return _internal_to_addresses().size();
}
inline int MailSettings::to_addresses_size() const {
  return _internal_to_addresses_size();
}
inline void MailSettings::clear_to_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_addresses_.Clear();
}
inline std::string* MailSettings::add_to_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_to_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:cpymail.protobuf.MailSettings.to_addresses)
  return _s;
}
inline const std::string& MailSettings::to_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.MailSettings.to_addresses)
  return _internal_to_addresses().Get(index);
}
inline std::string* MailSettings::mutable_to_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.MailSettings.to_addresses)
  return _internal_mutable_to_addresses()->Mutable(index);
}
inline void MailSettings::set_to_addresses(int index, const std::string& value) {
  _internal_mutable_to_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::set_to_addresses(int index, std::string&& value) {
  _internal_mutable_to_addresses()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::set_to_addresses(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_to_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::set_to_addresses(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_to_addresses()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::set_to_addresses(int index, absl::string_view value) {
  _internal_mutable_to_addresses()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::add_to_addresses(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_to_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::add_to_addresses(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_to_addresses()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::add_to_addresses(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_to_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::add_to_addresses(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_to_addresses()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cpymail.protobuf.MailSettings.to_addresses)
}
inline void MailSettings::add_to_addresses(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_to_addresses()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:cpymail.protobuf.MailSettings.to_addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MailSettings::to_addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cpymail.protobuf.MailSettings.to_addresses)
  return _internal_to_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MailSettings::mutable_to_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cpymail.protobuf.MailSettings.to_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_to_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MailSettings::_internal_to_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MailSettings::_internal_mutable_to_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.to_addresses_;
}

// repeated string cc_addresses = 2;
inline int MailSettings::_internal_cc_addresses_size() const {
  return _internal_cc_addresses().size();
}
inline int MailSettings::cc_addresses_size() const {
  return _internal_cc_addresses_size();
}
inline void MailSettings::clear_cc_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cc_addresses_.Clear();
}
inline std::string* MailSettings::add_cc_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_cc_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:cpymail.protobuf.MailSettings.cc_addresses)
  return _s;
}
inline const std::string& MailSettings::cc_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.MailSettings.cc_addresses)
  return _internal_cc_addresses().Get(index);
}
inline std::string* MailSettings::mutable_cc_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.MailSettings.cc_addresses)
  return _internal_mutable_cc_addresses()->Mutable(index);
}
inline void MailSettings::set_cc_addresses(int index, const std::string& value) {
  _internal_mutable_cc_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::set_cc_addresses(int index, std::string&& value) {
  _internal_mutable_cc_addresses()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::set_cc_addresses(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cc_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::set_cc_addresses(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cc_addresses()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::set_cc_addresses(int index, absl::string_view value) {
  _internal_mutable_cc_addresses()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::add_cc_addresses(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_cc_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::add_cc_addresses(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_cc_addresses()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::add_cc_addresses(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_cc_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::add_cc_addresses(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_cc_addresses()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cpymail.protobuf.MailSettings.cc_addresses)
}
inline void MailSettings::add_cc_addresses(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_cc_addresses()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:cpymail.protobuf.MailSettings.cc_addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MailSettings::cc_addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cpymail.protobuf.MailSettings.cc_addresses)
  return _internal_cc_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MailSettings::mutable_cc_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cpymail.protobuf.MailSettings.cc_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cc_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MailSettings::_internal_cc_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cc_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MailSettings::_internal_mutable_cc_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cc_addresses_;
}

// repeated string bcc_addresses = 3;
inline int MailSettings::_internal_bcc_addresses_size() const {
  return _internal_bcc_addresses().size();
}
inline int MailSettings::bcc_addresses_size() const {
  return _internal_bcc_addresses_size();
}
inline void MailSettings::clear_bcc_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bcc_addresses_.Clear();
}
inline std::string* MailSettings::add_bcc_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_bcc_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:cpymail.protobuf.MailSettings.bcc_addresses)
  return _s;
}
inline const std::string& MailSettings::bcc_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.MailSettings.bcc_addresses)
  return _internal_bcc_addresses().Get(index);
}
inline std::string* MailSettings::mutable_bcc_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.MailSettings.bcc_addresses)
  return _internal_mutable_bcc_addresses()->Mutable(index);
}
inline void MailSettings::set_bcc_addresses(int index, const std::string& value) {
  _internal_mutable_bcc_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::set_bcc_addresses(int index, std::string&& value) {
  _internal_mutable_bcc_addresses()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::set_bcc_addresses(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_bcc_addresses()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::set_bcc_addresses(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_bcc_addresses()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::set_bcc_addresses(int index, absl::string_view value) {
  _internal_mutable_bcc_addresses()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::add_bcc_addresses(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_bcc_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::add_bcc_addresses(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_bcc_addresses()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::add_bcc_addresses(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_bcc_addresses()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::add_bcc_addresses(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_bcc_addresses()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline void MailSettings::add_bcc_addresses(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_bcc_addresses()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:cpymail.protobuf.MailSettings.bcc_addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MailSettings::bcc_addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cpymail.protobuf.MailSettings.bcc_addresses)
  return _internal_bcc_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MailSettings::mutable_bcc_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cpymail.protobuf.MailSettings.bcc_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bcc_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MailSettings::_internal_bcc_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bcc_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MailSettings::_internal_mutable_bcc_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bcc_addresses_;
}

// string subject = 4;
inline void MailSettings::clear_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& MailSettings::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.MailSettings.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MailSettings::set_subject(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.subject)
}
inline std::string* MailSettings::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.MailSettings.subject)
  return _s;
}
inline const std::string& MailSettings::_internal_subject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subject_.Get();
}
inline void MailSettings::_internal_set_subject(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* MailSettings::_internal_mutable_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* MailSettings::release_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cpymail.protobuf.MailSettings.subject)
  return _impl_.subject_.Release();
}
inline void MailSettings::set_allocated_subject(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cpymail.protobuf.MailSettings.subject)
}

// string message = 5;
inline void MailSettings::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& MailSettings::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.MailSettings.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MailSettings::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cpymail.protobuf.MailSettings.message)
}
inline std::string* MailSettings::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.MailSettings.message)
  return _s;
}
inline const std::string& MailSettings::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void MailSettings::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* MailSettings::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* MailSettings::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cpymail.protobuf.MailSettings.message)
  return _impl_.message_.Release();
}
inline void MailSettings::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cpymail.protobuf.MailSettings.message)
}

// repeated .cpymail.protobuf.Attachment attachments = 6;
inline int MailSettings::_internal_attachments_size() const {
  return _internal_attachments().size();
}
inline int MailSettings::attachments_size() const {
  return _internal_attachments_size();
}
inline void MailSettings::clear_attachments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attachments_.Clear();
}
inline ::cpymail::protobuf::Attachment* MailSettings::mutable_attachments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.MailSettings.attachments)
  return _internal_mutable_attachments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>* MailSettings::mutable_attachments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cpymail.protobuf.MailSettings.attachments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attachments();
}
inline const ::cpymail::protobuf::Attachment& MailSettings::attachments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.MailSettings.attachments)
  return _internal_attachments().Get(index);
}
inline ::cpymail::protobuf::Attachment* MailSettings::add_attachments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cpymail::protobuf::Attachment* _add = _internal_mutable_attachments()->Add();
  // @@protoc_insertion_point(field_add:cpymail.protobuf.MailSettings.attachments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>& MailSettings::attachments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cpymail.protobuf.MailSettings.attachments)
  return _internal_attachments();
}
inline const ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>&
MailSettings::_internal_attachments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attachments_;
}
inline ::google::protobuf::RepeatedPtrField<::cpymail::protobuf::Attachment>*
MailSettings::_internal_mutable_attachments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attachments_;
}

// -------------------------------------------------------------------

// RequestResult

// int32 status_code = 1;
inline void RequestResult::clear_status_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_ = 0;
}
inline ::int32_t RequestResult::status_code() const {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.RequestResult.status_code)
  return _internal_status_code();
}
inline void RequestResult::set_status_code(::int32_t value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:cpymail.protobuf.RequestResult.status_code)
}
inline ::int32_t RequestResult::_internal_status_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_code_;
}
inline void RequestResult::_internal_set_status_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_code_ = value;
}

// string status_msg = 2;
inline void RequestResult::clear_status_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_msg_.ClearToEmpty();
}
inline const std::string& RequestResult::status_msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cpymail.protobuf.RequestResult.status_msg)
  return _internal_status_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RequestResult::set_status_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cpymail.protobuf.RequestResult.status_msg)
}
inline std::string* RequestResult::mutable_status_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status_msg();
  // @@protoc_insertion_point(field_mutable:cpymail.protobuf.RequestResult.status_msg)
  return _s;
}
inline const std::string& RequestResult::_internal_status_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_msg_.Get();
}
inline void RequestResult::_internal_set_status_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_msg_.Set(value, GetArena());
}
inline std::string* RequestResult::_internal_mutable_status_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_msg_.Mutable( GetArena());
}
inline std::string* RequestResult::release_status_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cpymail.protobuf.RequestResult.status_msg)
  return _impl_.status_msg_.Release();
}
inline void RequestResult::set_allocated_status_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_msg_.IsDefault()) {
          _impl_.status_msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:cpymail.protobuf.RequestResult.status_msg)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace cpymail


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_mailsettings_2eproto_2epb_2eh
